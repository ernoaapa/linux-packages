image: golang:1.11-stretch

variables:
  REPO_NAME: github.com/ernoaapa/linux-packages

stages:
- build
- publish

before_script:
  - go version

  # Move project under $GOPATH
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

  # Configure Docker
  - ./bin/install-docker.sh
  - echo $DOCKER_PASS | docker login --username $DOCKER_USER --password-stdin

  # install jq
  - apt-get update && apt-get install -y jq

# BUILD LINUXKIT
build:linuxkit:
  stage: build
  tags:
    - arm64
  script:
    - ./linuxkit/bin/install-tools.sh
    - |
      cd linuxkit/pkg
      make forcebuild

# PUBLISH LINUXKIT
.publish_linuxkit: &publish_linuxkit
  stage: publish
  script:
    - ./linuxkit/bin/install-tools.sh
    - echo $DOCKER_PASS | docker login --username $DOCKER_USER --password-stdin
    - |
      cd linuxkit/pkg
      make forcepush

publish:linuxkit:arm64:
  <<: *publish_linuxkit
  tags:
    - arm64
  variables:
    GOARCH: arm64

publish:linuxkit:armv6:
  <<: *publish_linuxkit
  tags:
    - armv6
  variables:
    GOARCH: arm
    GOARM: "6"

publish:linuxkit:armv7:
  <<: *publish_linuxkit
  tags:
    - armv7
  variables:
    GOARCH: arm
    GOARM: "7"

# BUILD PACKAGES
build:packages:
  stage: build
  tags:
    - arm64
  variables:
    GOARCH: arm64
  script:
    - ./packages/bin/install-tools.sh
    - ./packages/build-all.sh

# PUBLISH PACKAGES
.publish_packages: &publish_packages
  stage: publish
  script:
    - ./packages/bin/install-tools.sh
    - ./packages/publish-all.sh
  artifacts:
    paths:
    - dist/

publish:packages:arm64:
  <<: *publish_packages
  tags:
    - arm64
  variables:
    GOARCH: arm64

publish:packages:armv6:
  <<: *publish_packages
  tags:
    - armv6
  variables:
    GOARCH: arm
    GOARM: "6"

publish:packages:armv7:
  <<: *publish_packages
  tags:
    - armv7
  variables:
    GOARCH: arm
    GOARM: "7"